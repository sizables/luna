{GifReader} = require 'omggif'

Phaser.Loader.prototype.spritegif = (key, url) ->
  console.log 'GIF: ', key, url
  @binary key, url, (
    (key, data) =>
      start = Date.now()
      reader = new GifReader new Uint8Array data
      square = Math.ceil Math.sqrt reader.numFrames()
      console.log square * reader.width, square * reader.height
      canvas = Phaser.Canvas.create square * reader.width, square * reader.height
      context = canvas.getContext '2d'
      for index in [0...reader.numFrames()]
        x = (index % square) * reader.width
        y = (Math.floor index / square) * reader.height
        image = new ImageData reader.width, reader.height
        image[key] = value for key, value of reader.frameInfo index
        image.delay = image.delay * 10 if image.delay
        reader.decodeAndBlitFrameRGBA index, image.data
        context.putImageData image, x, y
      Phaser.Canvas.addToDOM canvas, document.body
  ), @game

# xhr = new XMLHttpRequest
# xhr.open 'GET', 'http://i.imgur.com/90Cs9tr.gif'
# xhr.responseType = 'arraybuffer'
# xhr.onload = (event) ->
#   time = Date.now()
#   reader= new GifReader new Uint8Array @response
#   images=
#     for index in [0...reader.numFrames()]
#       image = @createImageData reader.width, reader.height
#       image[key] = value for key, value of reader.frameInfo index
#       image.delay = image.delay * 10 if image.delay
#       reader.decodeAndBlitFrameRGBA index, image.data
#       image
#   images.loopCount= reader.loopCount()
#   images.loopCount?= -1
#
#   console.log Date.now() - time, images
# xhr.send()

#
# xhr = new XMLHttpRequest
# xhr.open 'GET', 'http://i.imgur.com/nZskeWT.gif', true
# # Hack to pass bytes through unprocessed.
# xhr.overrideMimeType 'text/plain; charset=x-user-defined'
#
# xhr.onreadystatechange = (e) ->
#   if @readyState == 4 and @status == 200
#     binStr = @responseText
#     i = 0
#     len = binStr.length
#     while i < len
#       c = binStr.charCodeAt(i)
#       #String.fromCharCode(c & 0xff);
#       byte = c & 0xff
#       # byte at offset i
#       ++i
#   return
#
# xhr.send()

# ---
# generated by js2coffee 2.0.4

# file =
#   type: 'image'
#   key: 'luna'
#   url: 'http://i.imgur.com/LRQnBih.png'
#   data: null
#   error: false
#   loaded: false
# file.data =
# file.data.name = file.key
#
# file.data.onload = ->
#
#   console.log file.data
#
#   file.loaded = true
#   game.cache.addImage file.key, file.url, file.data
#   luna = game.add.sprite(game.world.centerX, game.world.centerY, 'luna')
#   luna.anchor.setTo 0.5, 0.5
#   return
#
# file.data.onerror = ->
#   file.error = true
#   return
#
# file.data.crossOrigin = '*'
# file.data.src = file.url
